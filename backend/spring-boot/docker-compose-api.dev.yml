services:
  bugzkit-api:
    container_name: bugzkit-api
    image: bugzkit-api:dev
    build:
      target: dev
    ports:
      - "${API_PORT:-8080}:${API_PORT:-8080}"
    restart: always
    environment:
      APP_NAME: ${APP_NAME:-bugzkit}
      API_PORT: ${API_PORT:-8080}
      UI_URL: ${UI_URL:-http://localhost:5173}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE:-bugzkit}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_DATABASE: ${REDIS_DATABASE:-0}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-root}
      USER_PASSWORD: ${USER_PASSWORD:-qwerty123}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:client_id}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:client_secret}
      SMTP_HOST: ${SMTP_HOST:-smtp.sendgrid.net}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USER:-apikey}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-password}
      SMTP_SENDER: ${SMTP_SENDER:-office@bugzkit.com}
      JWT_SECRET: ${JWT_SECRET:-secret}
      ACCESS_TOKEN_DURATION: ${ACCESS_TOKEN_DURATION:-900}
      REFRESH_TOKEN_DURATION: ${REFRESH_TOKEN_DURATION:-604800}
      VERIFY_EMAIL_TOKEN_DURATION: ${VERIFY_EMAIL_TOKEN_DURATION:-900}
      RESET_PASSWORD_TOKEN_DURATION: ${RESET_PASSWORD_TOKEN_DURATION:-900}
    depends_on:
      - postgres
      - redis
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:${API_PORT:-8080}/actuator/health",
        ]
      start_period: 10s
      interval: 30s
      retries: 3
    networks:
      - web

  postgres:
    container_name: postgres
    image: postgres:17.2-alpine
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    restart: always
    environment:
      PGPORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DATABASE:-bugzkit}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-U",
          "${POSTGRES_USER:-postgres}",
          "-d",
          "${POSTGRES_DATABASE:-bugzkit}",
        ]
      start_period: 10s
      interval: 30s
      retries: 3
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web

  redis:
    container_name: redis
    image: redis:7.4.1
    ports:
      - "${REDIS_PORT:-6379}:${REDIS_PORT:-6379}"
    restart: always
    environment:
      REDIS_DATABASE: ${REDIS_DATABASE:-0}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-root}
    command: redis-server --port ${REDIS_PORT:-6379} --requirepass ${REDIS_PASSWORD:-root}
    healthcheck:
      test:
        [
          "CMD",
          "redis-cli",
          "-h",
          "localhost",
          "-p",
          "${REDIS_PORT:-6379}",
          "-a",
          "${REDIS_PASSWORD:-root}",
          "ping",
        ]
      start_period: 10s
      interval: 30s
      retries: 3
    volumes:
      - redis_data:/data
    networks:
      - web

volumes:
  postgres_data:
  redis_data:

networks:
  web:
    driver: bridge
